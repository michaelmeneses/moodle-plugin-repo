name: Build Satis

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
    inputs:
      fix_checksums:
        description: "Run s3-satis with --fix-checksums to correct packages checksums"
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build and Deploy Satis
    runs-on: ubuntu-latest

    container:
      image: middagtec/image-bitbucket-ci:v5-php82
      options: --user root

    env:
      COMPOSER_ALLOW_SUPERUSER: 1
      PROCESS_TIMEOUT: 1800
      COMPOSER_PROCESS_TIMEOUT: 1800
      COMPOSER_MEMORY_LIMIT: -1

      # Envs for Satis MIDDAG
      SATIS_NAME: ${{ vars.SATIS_NAME }}
      SATIS_URL: ${{ vars.SATIS_URL }}

      # Envs for S3 Satis (Cloudflare R2)
      S3_BUCKET: ${{ vars.S3_BUCKET }}
      S3_ACCESS_KEY_ID: ${{ vars.S3_ACCESS_KEY_ID }}
      S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      S3_REGION: ${{ vars.S3_REGION }}
      S3_ENDPOINT: ${{ vars.S3_ENDPOINT }}
      S3_USE_PATH_STYLE_ENDPOINT: ${{ vars.S3_USE_PATH_STYLE_ENDPOINT }}

    steps:
      - name: Checkout source-code
        uses: actions/checkout@v4

      - name: Restore Composer cache
        uses: actions/cache@v4
        with:
          path: /root/.cache/composer
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Restore VCS mirrors cache
        uses: actions/cache@v4
        with:
          path: /root/.cache/composer/vcs
          key: satis-vcs-${{ runner.os }}
          restore-keys: |
            satis-vcs-${{ runner.os }}

      - name: Restore S3-Satis cache
        uses: actions/cache@v4
        with:
          path: /tmp/s3-satis-generator
          key: s3-satis-${{ runner.os }}
          restore-keys: |
            s3-satis-${{ runner.os }}

      - name: Build s3-satis
        run: |
          set -e
          if [ "${{ github.event.inputs.fix_checksums }}" = "true" ]; then
            echo "Running composer run full:s3-satis:fix-checksums"
            composer run full:s3-satis:fix-checksums
          else
            echo "Running composer run full:s3-satis"
            composer run full:s3-satis
          fi

      - name: Modify index.html with custom CSS
        run: |
          set -e
          if ! command -v aws &> /dev/null; then
            echo ">> AWS CLI not found. Installing AWS CLI v2..."
            cd /tmp
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -q awscliv2.zip
            ./aws/install
            rm -rf awscliv2.zip aws
          else
            echo ">> AWS CLI already installed"
          fi
          aws --version

          echo ">> Downloading index.html from R2"

          # Configure AWS CLI to use Cloudflare R2 endpoint
          export AWS_ACCESS_KEY_ID="${S3_ACCESS_KEY_ID}"
          export AWS_SECRET_ACCESS_KEY="${S3_SECRET_ACCESS_KEY}"
          export AWS_DEFAULT_REGION="${S3_REGION}"

          # Configure path-style access for R2 (AWS CLI v2)
          if [ "${S3_USE_PATH_STYLE_ENDPOINT}" = "true" ]; then
            export AWS_S3_USE_PATH_STYLE_ENDPOINT=true
          fi

          # Create temporary directory
          TEMP_DIR=$(mktemp -d)
          INDEX_FILE="$TEMP_DIR/index.html"

          # Download index.html from R2
          if aws s3 cp "s3://${S3_BUCKET}/index.html" "$INDEX_FILE" \
            --endpoint-url="${S3_ENDPOINT}"; then

            echo ">> Adding custom CSS to index.html"
            sed -i '/<head>/a <style>.field-required-by {display: none !important;}</style>' "$INDEX_FILE"

            echo ">> Uploading modified index.html back to R2"
            aws s3 cp "$INDEX_FILE" "s3://${S3_BUCKET}/index.html" \
              --endpoint-url="${S3_ENDPOINT}" \
              --content-type "text/html"

            echo "Inline CSS successfully added!"

            # Clean up temporary file
            rm -rf "$TEMP_DIR"
          else
            echo "Error: index.html file not found in bucket ${S3_BUCKET}. Skipping CSS addition."
            rm -rf "$TEMP_DIR"
            exit 0
          fi

      - name: Show cache state summary
        run: |
          echo "Cache states:"
          du -sh /root/.cache/composer || true
          du -sh /tmp/s3-satis-generator || true
